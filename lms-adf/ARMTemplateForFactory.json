{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "lms-adf"
		},
		"KeyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://lms-keyvault-1.vault.azure.net/"
		},
		"LMS_web_stud_ls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://raw.githubusercontent.com/sahankumar222/LibraryManagementSystem/refs/heads/main/Raw-Data/"
		},
		"LMS_web_stud_ls_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sahankumar222@gmail.com"
		},
		"lms_adls_ls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://lmsstorageaccount2025.dfs.core.windows.net/"
		},
		"lms_git_ls_inc_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://raw.githubusercontent.com/sahankumar222/LibraryManagementSystem/refs/heads/main/Raw-Data/Transaction/"
		},
		"lms_git_ls_inc_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sahankumar222@gmail.com"
		},
		"lms_sql_ls_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "lms-server-sql.database.windows.net"
		},
		"lms_sql_ls_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "lms-database"
		},
		"lms_sql_ls_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sqladmin"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/LmsIncrementalLoad')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "initial_load",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "lms_sql_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "IncrementTheInitialLoad",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "initial_load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "increment_load_value",
							"value": {
								"value": "@concat(\n    if(equals(substring(activity('initial_load').output.firstRow.LastLoadedQuarter, 5, 2), 'Q4'),\n        string(add(int(substring(activity('initial_load').output.firstRow.LastLoadedQuarter, 0, 4)), 1)),\n        substring(activity('initial_load').output.firstRow.LastLoadedQuarter, 0,4)\n    ), '_Q',\n    if(equals(substring(activity('initial_load').output.firstRow.LastLoadedQuarter, 5, 2), 'Q4'),\n        '1',\n        string(add(int(substring(activity('initial_load').output.firstRow.LastLoadedQuarter, 6, 1)), 1))\n    )\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Check file exists",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "IncrementTheInitialLoad",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "file_check_ds",
								"type": "DatasetReference",
								"parameters": {
									"qurterValue": {
										"value": "@variables('increment_load_value')",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "ParquetReadSettings"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('Check file exists').output.exists",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Copy_trans_from_git",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "lms_git_ds",
											"type": "DatasetReference",
											"parameters": {
												"fileQuarter": {
													"value": "@variables('increment_load_value')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "lms_adls_parquet_ds",
											"type": "DatasetReference",
											"parameters": {
												"folder_name": {
													"value": "@activity('initial_load').output.firstRow.DatasetName",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Update_load",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy_trans_from_git",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[incr_load_pro]",
										"storedProcedureParameters": {
											"update_load": {
												"value": {
													"value": "@variables('increment_load_value')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "lms_sql_ls",
										"type": "LinkedServiceReference"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Email notification",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "POST",
										"headers": {
											"Content-Type": "application/json"
										},
										"url": "https://prod-31.centralindia.logic.azure.com:443/workflows/df25154ade1a4f2f82387157c51293fa/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=dCF3iOXM4Qe4Ok5cpHCe0py-D1CSvhaTraup5LYU01o",
										"body": {
											"value": "{\n  \"subject\": \"File Already Exists\",\n  \"body\": \"The file transactions_@{variables('increment_load_value')}.csv already exists in ADLS. No new copy was performed.\"\n}\n\n\n\n\n\n\n\n\n\n",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"increment_load_value": {
						"type": "String"
					},
					"files_list": {
						"type": "String"
					},
					"gitfile_sha": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-18T12:04:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/lms_sql_ds')]",
				"[concat(variables('factoryId'), '/datasets/file_check_ds')]",
				"[concat(variables('factoryId'), '/datasets/lms_git_ds')]",
				"[concat(variables('factoryId'), '/datasets/lms_adls_parquet_ds')]",
				"[concat(variables('factoryId'), '/linkedServices/lms_sql_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LmsStaticFileLoad')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Iterate initial load table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Initial_load_table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Initial_load_table').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Git_commit_history",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "GetGithubToken",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {
											"Authorization": {
												"value": "Bearer @{activity('GetGithubToken').output.value}",
												"type": "Expression"
											},
											"Accept": "application/vnd.github.v3+json",
											"User-Agent": "Azure-Data-Factory"
										},
										"url": {
											"value": "@concat(\n    'https://api.github.com/repos/sahankumar222/LibraryManagementSystem/contents/Raw-Data/',\n    item().fileName,'/',item().fileName,'.csv'\n)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "GitFileSHA",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Git_commit_history",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "gitfile_sha",
										"value": {
											"value": "@activity('Git_commit_history').output.sha",
											"type": "Expression"
										}
									}
								},
								{
									"name": "If initial load SHA is equal to the current SHA",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "GitFileSHA",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@not(equals(item().SHA, activity('Git_commit_history').output.sha))",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "EmailNotification",
												"type": "WebActivity",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"method": "POST",
													"headers": {},
													"url": "https://prod-31.centralindia.logic.azure.com:443/workflows/df25154ade1a4f2f82387157c51293fa/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=dCF3iOXM4Qe4Ok5cpHCe0py-D1CSvhaTraup5LYU01o",
													"body": {
														"value": "{\n  \"subject\": \"File Already Exists\",\n  \"body\": \"In the pipeline LmsStaticFileLoad, the file @{item().fileName}.csv already exists in ADLS. Copy activity was skipped.\"\n}",
														"type": "Expression"
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "File Git  - ADLS",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "HttpReadSettings",
															"requestMethod": "GET"
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "ParquetSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "ParquetWriteSettings"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "LMS_web_stud_ds",
														"type": "DatasetReference",
														"parameters": {
															"file_names": {
																"value": "@item().fileName",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "LMS_parquet_adls_ds",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											},
											{
												"name": "UpdateFileSHA",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "File Git  - ADLS",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[UpdateFileSHA]",
													"storedProcedureParameters": {
														"fileName": {
															"value": {
																"value": "@item().fileName",
																"type": "Expression"
															},
															"type": "String"
														},
														"newSHA": {
															"value": {
																"value": "@activity('Git_commit_history').output.SHA",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "lms_sql_ls",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								},
								{
									"name": "GetGithubToken",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {},
										"url": "https://lms-keyvault-1.vault.azure.net/secrets/Githubaccesstoken?api-version=7.3",
										"authentication": {
											"type": "MSI",
											"resource": "https://vault.azure.net"
										}
									}
								}
							]
						}
					},
					{
						"name": "Initial_load_table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "LMS_sql_ds_static",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"gitfile_sha": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-19T05:22:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LMS_sql_ds_static')]",
				"[concat(variables('factoryId'), '/datasets/LMS_web_stud_ds')]",
				"[concat(variables('factoryId'), '/datasets/LMS_parquet_adls_ds')]",
				"[concat(variables('factoryId'), '/linkedServices/lms_sql_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LMS_parquet_adls_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lms_adls_ls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "bronze"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "student_id",
						"type": "UTF8"
					},
					{
						"name": "first_name",
						"type": "UTF8"
					},
					{
						"name": "last_name",
						"type": "UTF8"
					},
					{
						"name": "department",
						"type": "UTF8"
					},
					{
						"name": "student_year",
						"type": "UTF8"
					},
					{
						"name": "section",
						"type": "UTF8"
					},
					{
						"name": "email",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lms_adls_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LMS_sql_ds_static')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lms_sql_ls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "filesSHA"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lms_sql_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LMS_sql_shaFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lms_sql_ls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "fileName",
						"type": "varchar"
					},
					{
						"name": "SHA",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "filesSHA"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lms_sql_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LMS_web_stud_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LMS_web_stud_ls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"file_names": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@concat(dataset().file_names,'/',dataset().file_names,'.csv')",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LMS_web_stud_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/file_check_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lms_adls_ls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"qurterValue": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('transactions_',dataset().qurterValue,'.parquet')",
							"type": "Expression"
						},
						"folderPath": "transactions",
						"fileSystem": "bronze"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "transaction_id",
						"type": "UTF8"
					},
					{
						"name": "student_id",
						"type": "UTF8"
					},
					{
						"name": "issue_date",
						"type": "UTF8"
					},
					{
						"name": "due_date",
						"type": "UTF8"
					},
					{
						"name": "return_date",
						"type": "UTF8"
					},
					{
						"name": "book_id",
						"type": "UTF8"
					},
					{
						"name": "copy_id",
						"type": "UTF8"
					},
					{
						"name": "fine_amount",
						"type": "UTF8"
					},
					{
						"name": "initial_status",
						"type": "UTF8"
					},
					{
						"name": "final_status",
						"type": "UTF8"
					},
					{
						"name": "payment_status",
						"type": "UTF8"
					},
					{
						"name": "payment_date",
						"type": "UTF8"
					},
					{
						"name": "year",
						"type": "UTF8"
					},
					{
						"name": "quarter",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lms_adls_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lms_adls_parquet_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lms_adls_ls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().folder_name",
							"type": "Expression"
						},
						"fileSystem": "bronze"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lms_adls_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lms_git_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lms_git_ls_inc",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileQuarter": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@concat('transactions_',dataset().fileQuarter,'.csv')",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lms_git_ls_inc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lms_sql_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lms_sql_ls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DatasetName",
						"type": "varchar"
					},
					{
						"name": "LastLoadedQuarter",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "IncrementalLoadTracker"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lms_sql_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/KeyVault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('KeyVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LMS_web_stud_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('LMS_web_stud_ls_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('LMS_web_stud_ls_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "KeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "kvgithub"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/KeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lms_adls_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('lms_adls_ls_properties_typeProperties_url')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "KeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "lms-accountkeys"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/KeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lms_git_ls_inc')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('lms_git_ls_inc_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('lms_git_ls_inc_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "KeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "kvgithub"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/KeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lms_sql_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('lms_sql_ls_properties_typeProperties_server')]",
					"database": "[parameters('lms_sql_ls_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('lms_sql_ls_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "KeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "kvsql"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/KeyVault')]"
			]
		}
	]
}